{"version":3,"sources":["assets/img/dropzone.png","assets/img/plane.png","assets/img/plane-unselected.png","views/Settings.js","utils.js","views/FlightsList.js","views/FlightData.js","views/Dashboard.js","routes.js","layouts/Admin/Admin.js","index.js"],"names":["module","exports","SettingsModal","isOpen","setIsOpen","toggle","Modal","ModalHeader","ModalBody","InputGroup","InputGroupAddon","addonType","Button","style","marginTop","width","Input","height","color","defaultValue","localStorage","getItem","onBlur","e","setItem","target","value","getServerURL","ip","port","dateToString","dateObject","year","getUTCFullYear","toString","month","getUTCMonth","padStart","date","getUTCDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","FlightsList","internalFlights","externalFlights","selectedFlightId","setSelectedFlightPlan","setInternalFlights","notify","onDrop","useCallback","acceptedFiles","file","console","log","name","split","pop","toLowerCase","reader","FileReader","onabort","onerror","onload","fileContent","result","fetch","method","headers","body","then","data","catch","error","message","readAsText","useDropzone","noClick","getRootProps","getInputProps","isDragActive","internalFlightsItems","Object","keys","flightId","company_name","push","ListGroupItem","active","onClick","tagName","preventDefault","response","json","key","tag","href","action","size","float","newInternalFlights","externalFlightsItems","flightsListStyle","textTransform","textAlign","margin","borderStyle","borderWidth","backgroundImage","require","backgroundRepeat","backgroundPosition","backgroundSize","ListGroup","overflow","FlightData","selectedFlightPlan","rowStyle","paddingTop","paddingBottom","headerRowStyle","startLatitude","initial_location","latitude","startLongitude","longitude","startLocation","lastSegment","segments","slice","endLatitude","endLongitude","endLocation","startTime","string","parseInt","Date","UTC","stringToDate","date_time","endTime","getTime","segment","setSeconds","getSeconds","timespan_seconds","Table","striped","dark","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","Dashboard","React","Component","constructor","super","state","isSettingsModalOpen","componentDidMount","this","interval","setInterval","fetchFlightsData","document","addEventListener","setState","componentWillUnmount","clearInterval","getCurrentUtcTimeString","currentTime","flightData","is_external","flight_id","newSelectedFlightPlan","type","text","options","place","icon","autoDismiss","refs","notificationAlert","render","selectedIcon","iconSize","iconAnchor","popupAnchor","shadowSize","shadowAnchor","unselectedIcon","markers","markerPosition","companyName","Marker","position","Popup","selectedFlight","pathSegments","Settings","className","fontSize","top","right","cursor","ref","Row","Col","lg","Card","Map","center","zoom","TileLayer","url","Polyline","positions","CardHeader","padding","CardTitle","marginBottom","fontFamily","passengers","CardBody","routes","ps","path","rtlName","component","layout","Admin","props","getRoutes","map","prop","handleBgClick","backgroundColor","sidebarOpened","documentElement","indexOf","navigator","platform","classList","remove","PerfectScrollbar","mainPanel","suppressScrollX","tables","querySelectorAll","i","length","destroy","componentDidUpdate","history","scrollTop","scrollingElement","from","to","hist","createBrowserHistory","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.a23139ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dropzone.4dd7388d.png\";","module.exports = __webpack_public_path__ + \"static/media/plane.4aeb612b.png\";","module.exports = __webpack_public_path__ + \"static/media/plane-unselected.724db06b.png\";","import React from 'react'\r\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap'\r\nimport { InputGroup, InputGroupAddon, Input } from 'reactstrap'\r\n\r\n\r\nconst SettingsModal = ({isOpen, setIsOpen}) => {\r\n  const toggle = () => setIsOpen(!isOpen)\r\n\r\n  return (\r\n    <Modal isOpen={isOpen} toggle={toggle}>\r\n        <ModalHeader toggle={toggle}>Settings</ModalHeader>\r\n        <ModalBody>\r\n            <InputGroup>\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                <Button style={{marginTop: 0, width: '7em'}}>IP</Button>\r\n                </InputGroupAddon>\r\n                <Input \r\n                    style={{height: '3.3em', color: 'black'}}\r\n                    defaultValue={localStorage.getItem('FlightControl_server_ip')}\r\n                    onBlur={(e) => {\r\n                        localStorage.setItem('FlightControl_server_ip', e.target.value)\r\n                    }}\r\n                    />\r\n            </InputGroup>\r\n            <InputGroup>\r\n                <InputGroupAddon addonType=\"prepend\">\r\n                <Button style={{marginTop: 0, width: '7em'}}>PORT</Button>\r\n                </InputGroupAddon>\r\n                <Input \r\n                    style={{height: '3.3em', color: 'black'}}\r\n                    defaultValue={localStorage.getItem('FlightControl_server_port')}\r\n                    onBlur={(e) => {\r\n                        localStorage.setItem('FlightControl_server_port', e.target.value)\r\n                    }}\r\n                />\r\n            </InputGroup>\r\n        </ModalBody>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default SettingsModal\r\n","const DEFAULT_SERVER_IP = 'localhost'\r\nconst DEFAULT_SERVER_PORT = '44336'\r\nexport const getServerURL = () => {\r\n  const ip = localStorage.getItem('FlightControl_server_ip') || DEFAULT_SERVER_IP\r\n  const port = localStorage.getItem('FlightControl_server_port') || DEFAULT_SERVER_PORT\r\n  return `https://${ip}:${port}`\r\n}\r\n\r\nexport const stringToDate = (string) => {\r\n  const year = parseInt(string.slice(0, 4))\r\n  const month = parseInt(string.slice(5, 7)) - 1\r\n  const date = parseInt(string.slice(8, 10))\r\n  const hours = parseInt(string.slice(11, 13))\r\n  const minutes = parseInt(string.slice(14, 16))\r\n  const seconds = parseInt(string.slice(17, 19))\r\n  return new Date(Date.UTC(year, month, date, hours, minutes, seconds))\r\n}\r\n\r\nexport const dateToString = (dateObject) => {\r\n  const year = dateObject.getUTCFullYear().toString()\r\n  const month = (dateObject.getUTCMonth() + 1).toString().padStart(2, '0')\r\n  const date = dateObject.getUTCDate().toString().padStart(2, '0')\r\n  const hours = dateObject.getUTCHours().toString().padStart(2, '0')\r\n  const minutes = dateObject.getUTCMinutes().toString().padStart(2, '0')\r\n  const seconds = dateObject.getUTCSeconds().toString().padStart(2, '0')\r\n  return `${year}-${month}-${date}T${hours}:${minutes}:${seconds}z`\r\n}\r\n","import React, {useCallback} from \"react\"\r\n\r\nimport {\r\n    Button,\r\n    ListGroup,\r\n    ListGroupItem,\r\n  } from \"reactstrap\"\r\nimport {useDropzone} from 'react-dropzone'\r\n\r\nimport { getServerURL } from 'utils'\r\n\r\n\r\nconst FlightsList = ({\r\n    internalFlights, externalFlights, \r\n    selectedFlightId, setSelectedFlightPlan, setInternalFlights, notify}) => {\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    for (let file of acceptedFiles) {\r\n      console.log('Received file')\r\n      console.log(file)\r\n\r\n      const fileExtension = file.name.split('.').pop()\r\n      if (fileExtension.toLowerCase() !== 'json') {\r\n        notify('danger', 'Only JSON Files Are Allowed')\r\n        continue\r\n      }\r\n\r\n      const reader = new FileReader()\r\n\r\n      reader.onabort = () => console.log('file reading was aborted')\r\n      reader.onerror = () => console.log('file reading has failed')\r\n      reader.onload = () => {\r\n        const fileContent = reader.result\r\n        // Post the file content to the server\r\n        fetch(`${getServerURL()}/api/FlightPlan/`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: fileContent,\r\n        })\r\n        .then(data => {\r\n          console.log('Success: Added FlightPlan successfully')\r\n          notify('success', 'Added Flight Plan Successfully')\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error:', error)\r\n          notify('danger', error.message)\r\n        })\r\n      }\r\n      reader.readAsText(file)\r\n    }\r\n  }, [])\r\n  const {getRootProps, \r\n         getInputProps, \r\n         isDragActive} = useDropzone({onDrop, noClick: true})\r\n\r\n  const internalFlightsItems = []\r\n  for (let flightId of Object.keys(internalFlights)) {\r\n    const { company_name } = internalFlights[flightId]\r\n    internalFlightsItems.push(\r\n      <ListGroupItem \r\n        active={selectedFlightId === flightId}\r\n        onClick={(e) => {\r\n          if (e.target.tagName === 'BUTTON') {\r\n            e.preventDefault()\r\n          }\r\n          else {\r\n            // Fetch the new selected flight info\r\n            fetch(`${getServerURL()}/api/FlightPlan/${flightId}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n              setSelectedFlightPlan(data, flightId)\r\n            })\r\n            .catch((error) => {\r\n              console.error('Error:', error)\r\n              notify('danger', error.message)\r\n            })\r\n          }\r\n        }}\r\n        key={flightId} tag=\"a\" href=\"#\" action\r\n      >\r\n        {`Flight ${flightId}# - ${company_name}`}\r\n        <Button\r\n          color=\"danger\" size=\"sm\" style={{float: 'right'}}\r\n          onClick={() => {\r\n            // Delete the selected flight (send to the server)\r\n            fetch(`${getServerURL()}/api/Flights/${flightId}`, {\r\n              method: 'DELETE',\r\n            })\r\n            .then(data => {\r\n              console.log(`Success: Deleted Flight ${flightId} Successfully`, data)\r\n              notify('success', `Deleted Flight ${flightId} Successfully`)\r\n              let newInternalFlights = {...internalFlights}\r\n              delete newInternalFlights[flightId]\r\n              setInternalFlights(newInternalFlights)\r\n            })\r\n            .catch((error) => {\r\n              console.error('Error:', error)\r\n              notify('danger', error.message)\r\n            })\r\n          }}\r\n        >X</Button>\r\n      </ListGroupItem>\r\n    )\r\n  }\r\n\r\n  const externalFlightsItems = []\r\n  for (let flightId of Object.keys(externalFlights)) {\r\n    const { company_name } = externalFlights[flightId]\r\n    externalFlightsItems.push(\r\n      <ListGroupItem \r\n        onClick={(e) => {\r\n          // Fetch the new selected flight info\r\n          fetch(`${getServerURL()}/api/FlightPlan/${flightId}`)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            setSelectedFlightPlan(data, flightId)\r\n          })\r\n          .catch((error) => {\r\n            console.error('Error:', error)\r\n            notify('danger', error.message)\r\n          })\r\n        }}\r\n        key={flightId} tag=\"a\" href=\"#\" action\r\n      >\r\n        {`Flight ${flightId}# - ${company_name}`}\r\n      </ListGroupItem>\r\n    )\r\n  }\r\n\r\n  const flightsListStyle = {textTransform: 'uppercase', textAlign: 'center', margin: '0'}\r\n \r\n  return (\r\n    <div {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      {\r\n        isDragActive \r\n          ?\r\n          <div \r\n            style={\r\n              {\r\n                borderStyle: 'dashed',\r\n                borderWidth: 'thick',\r\n                height: '91.5vh', \r\n                backgroundImage: `url(${require('assets/img/dropzone.png')})`,\r\n                backgroundRepeat: 'no-repeat',\r\n                backgroundPosition: 'center',\r\n                backgroundSize: 'contain'\r\n              }\r\n            }\r\n          >\r\n          </div>\r\n          :\r\n          <div>\r\n            <h3 style={flightsListStyle}>Internals</h3>\r\n            <ListGroup style={{height: '40vh', overflow: 'auto'}}>\r\n              {internalFlightsItems}\r\n            </ListGroup>\r\n            <p />\r\n            <h3 style={flightsListStyle}>Externals</h3>\r\n            <ListGroup style={{height: '40vh', overflow: 'auto'}}>\r\n              {externalFlightsItems}\r\n            </ListGroup>\r\n          </div>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FlightsList\r\n","import React from \"react\"\r\n\r\nimport { stringToDate, dateToString } from 'utils'\r\n\r\n// reactstrap components\r\nimport { Table } from \"reactstrap\"\r\n\r\n\r\nconst FlightData = ({selectedFlightPlan}) => {\r\n    const rowStyle = {paddingTop: '0.5em', paddingBottom: '0.5em'}\r\n    const headerRowStyle = {paddingTop: '0.8em', paddingBottom: '0.8em'}\r\n  \r\n    const startLatitude = selectedFlightPlan.initial_location.latitude\r\n    const startLongitude = selectedFlightPlan.initial_location.longitude\r\n    const startLocation = `[${startLatitude}, ${startLongitude}]`\r\n  \r\n    const lastSegment = selectedFlightPlan.segments.slice().pop()\r\n    const endLatitude = lastSegment.latitude\r\n    const endLongitude = lastSegment.longitude\r\n    const endLocation = `[${endLatitude}, ${endLongitude}]`\r\n  \r\n    const startTime = stringToDate(selectedFlightPlan.initial_location.date_time)\r\n    let endTime = new Date(startTime.getTime())\r\n    for (let segment of selectedFlightPlan.segments) {\r\n      endTime.setSeconds(endTime.getSeconds() + segment.timespan_seconds)\r\n    }\r\n  \r\n    return (\r\n      <Table striped  size=\"sm\" dark>\r\n        <thead>\r\n          <tr>\r\n            <th style={headerRowStyle}>#</th>\r\n            <th style={headerRowStyle}>Time</th>\r\n            <th style={headerRowStyle}>Location</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td style={rowStyle}>Start</td>\r\n            <td style={rowStyle}>{dateToString(startTime)}</td>\r\n            <td style={rowStyle}>{startLocation}</td>\r\n          </tr>\r\n  \r\n          <tr>\r\n            <td style={rowStyle}>End</td>\r\n            <td style={rowStyle}>{dateToString(endTime)}</td>\r\n            <td style={rowStyle}>{endLocation}</td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n    )\r\n  }\r\n\r\n  export default FlightData\r\n","import React from \"react\"\n\nimport NotificationAlert from \"react-notification-alert\"\n\nimport Settings from './Settings'\nimport FlightsList from './FlightsList'\nimport FlightData from './FlightData'\nimport { getServerURL, dateToString } from 'utils'\n\n// reactstrap components\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardTitle,\n  Row,\n  Col,\n} from \"reactstrap\"\n\n///////////////////////////////////////////////////////////////////////////////\n// Enable icons with CRA\n// https://github.com/PaulLeCam/react-leaflet/issues/453#issuecomment-410450387\nimport { Map, TileLayer, Marker, Popup, Polyline } from \"react-leaflet\"\nimport 'leaflet/dist/leaflet.css'\nimport L from 'leaflet'\ndelete L.Icon.Default.prototype._getIconUrl\n\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n})\n///////////////////////////////////////////////////////////////////////////////\n\nconst SAMPLE_ELAPSE_TIME = 5000 // In MS\n\n\nclass Dashboard extends React.Component {\n  constructor() {\n    super()\n    this.interval = null\n  }\n\n  state = {\n    selectedFlightPlan: null,\n    internalFlights: {},\n    externalFlights: {},\n    isSettingsModalOpen: false,\n  }\n\n  componentDidMount = () => {\n    this.interval = setInterval(this.fetchFlightsData, SAMPLE_ELAPSE_TIME)\n    document.body.addEventListener('click', (e) => {\n      this.setState({selectedFlightPlan: null})\n    })\n  }\n\n  componentWillUnmount = () => {\n    clearInterval(this.interval)\n  }\n\n  getCurrentUtcTimeString = () => {\n    const currentTime = new Date()\n    return dateToString(currentTime)\n  }\n\n  fetchFlightsData = () => {\n    fetch(`${getServerURL()}/api/Flights?relative_to=${this.getCurrentUtcTimeString()}`)\n    .then(response => response.json())\n    .then(data => {\n      const internalFlights = {}\n      const externalFlights = {}\n      for (let flightData of data) {\n        if (flightData.is_external) {\n          externalFlights[flightData.flight_id] = flightData\n        }\n        else {\n          internalFlights[flightData.flight_id] = flightData\n        }\n      }\n      this.setState({internalFlights, externalFlights})\n    })\n    .catch((error) => {\n      console.error('Error:', error)\n      this.notify('danger', error.message)\n    })\n  }\n\n  setSelectedFlightPlan = (newSelectedFlightPlan, flightId) => {\n    this.setState({selectedFlightPlan: {...newSelectedFlightPlan, flight_id: flightId} })\n  }\n\n  setInternalFlights = (newInternalFlights) => {\n    this.setState({internalFlights: newInternalFlights })\n  }\n\n  notify = (type, text) => {\n    // Type is one of: info, success, danger, warning, primary\n    const options = {\n      place: 'tc',\n      message: (\n        <div>\n          {text}\n        </div>\n      ),\n      type: type,\n      icon: \"tim-icons icon-bell-55\",\n      autoDismiss: 5\n    }\n    try {\n      // The content might not be loaded yet\n      this.refs.notificationAlert.notificationAlert(options)\n    }\n    catch {\n      console.error(`Failed to notify: ${text}`)\n    }\n  }\n\n  render() {\n    const position = [31.771959, 35.217018] // Jerusalem\n    const iconSize = 36.0\n    const selectedIcon = L.icon({\n      iconUrl: require('assets/img/plane.png'),\n      iconSize: [iconSize, iconSize],\n      iconAnchor: [iconSize / 2 , iconSize / 2],\n      popupAnchor: [0, 0],\n      shadowUrl: null,\n      shadowSize: [0, 0],\n      shadowAnchor: [0, 0]\n    })\n    const unselectedIcon = L.icon({\n      iconUrl: require('assets/img/plane-unselected.png'),\n      iconSize: [iconSize, iconSize],\n      iconAnchor: [iconSize / 2 , iconSize / 2],\n      popupAnchor: [0, 0],\n      shadowUrl: null,\n      shadowSize: [0, 0],\n      shadowAnchor: [0, 0]\n    })\n\n    const { internalFlights, externalFlights, selectedFlightPlan } = this.state\n\n    const markers = []\n    // Add unselected flights\n    for (let flightId of Object.keys(internalFlights)) {\n      if (selectedFlightPlan && flightId === selectedFlightPlan.flight_id){\n        continue\n      }\n      const markerPosition = [\n        internalFlights[flightId].latitude, internalFlights[flightId].longitude\n      ]\n      const companyName = internalFlights[flightId].company_name\n      markers.push(\n        <Marker \n          key={flightId} icon={unselectedIcon} position={markerPosition} \n          onClick={() => {\n            // Fetch the new selected flight info\n            fetch(`${getServerURL()}/api/FlightPlan/${flightId}`)\n            .then(response => response.json())\n            .then(data => {\n              this.setSelectedFlightPlan(data, flightId)\n            })\n            .catch((error) => {\n              console.error('Error:', error)\n              this.notify('danger', error.message)\n            })\n          }}>\n          <Popup>{`Flight #${flightId}`}<br />{companyName}</Popup>\n        </Marker>\n      )\n    }\n    // Add selected flight (if exist)\n    let selectedFlight = null\n    let pathSegments = []\n    if (selectedFlightPlan) {\n      const selectedFlightId = selectedFlightPlan.flight_id\n      selectedFlight = internalFlights[selectedFlightId] || externalFlights[selectedFlightId]\n      \n      const markerPosition = [selectedFlight.latitude, selectedFlight.longitude]\n      const companyName = selectedFlight.company_name\n\n      markers.push(\n        <Marker key={selectedFlightId} icon={selectedIcon} position={markerPosition} >\n          <Popup>{`Flight #${selectedFlightId}`}<br />{companyName}</Popup>\n        </Marker>\n      )\n\n      // Create marked path\n      pathSegments.push([\n        selectedFlightPlan.initial_location.latitude,\n        selectedFlightPlan.initial_location.longitude\n      ])\n      for (let segment of selectedFlightPlan.segments) {\n        pathSegments.push([segment.latitude, segment.longitude])\n      }\n    }\n\n    return (\n      <>\n        <Settings \n          isOpen={this.state.isSettingsModalOpen}\n          setIsOpen={(isOpen) => this.setState({isSettingsModalOpen: isOpen})}\n         />\n        <i className=\"fas fa-cog\" \n          style={{position: 'absolute', \n                  fontSize: '2rem', \n                  top: '0.1em', \n                  right: '0.1em',\n                  cursor: 'pointer'}}\n          onClick={() => {\n            this.setState({isSettingsModalOpen: true})\n          }}\n        ></i>\n        <div className=\"content\">\n          <div className=\"react-notification-alert-container\">\n            <NotificationAlert ref=\"notificationAlert\" />\n          </div>\n          <Row>\n\n            <Col lg=\"8\">\n              {/* Map */}\n              <Row>\n                <Card className=\"card-chart\">\n                  <Map center={position} zoom={9} style={{ height: '65vh'}}>\n                    <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n                    {markers}\n                    <Polyline positions={pathSegments}/>\n                  </Map>\n                </Card>\n              </Row>\n\n              {/* Data */}\n              <Row>\n\n                {\n                  selectedFlightPlan &&\n                  <Card className=\"card-chart\" style={{marginTop: '-1.5em'}}>\n                    <CardHeader style={{padding: '0.5em 0.5em 0'}}>\n                      <CardTitle style={{marginBottom: '0.2em'}} tag=\"h3\">\n                        <span style={{fontFamily: 'Helvetica'}}>\n                          Flight <span style={{color: 'red'}}>{selectedFlightPlan.flight_id}</span>\n                        </span>\n                        <span style={{fontFamily: 'Helvetica'}}>\n                           {` - ${selectedFlightPlan.company_name}`}\n                        </span>\n                        <span style={{fontFamily: 'Helvetica'}}>\n                           {` - ${selectedFlightPlan.passengers} Passengers`}\n                        </span>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardBody style={{padding: '1px 4px'}} >\n                      {\n                        selectedFlightPlan && \n                        <FlightData \n                          selectedFlightPlan={selectedFlightPlan}\n                        />\n                      }\n                    </CardBody>\n                  </Card>\n                }\n                \n              </Row>\n            </Col>\n\n            {/* Flights List */}\n            <Col lg=\"4\">\n              <Card className=\"card-chart\">\n                <CardBody style={{padding: '1px 10px'}}>\n                  <FlightsList \n                    internalFlights={internalFlights} \n                    externalFlights={externalFlights}\n                    selectedFlightId={selectedFlightPlan ? selectedFlightPlan.flight_id : null}\n                    setSelectedFlightPlan={this.setSelectedFlightPlan}\n                    setInternalFlights={this.setInternalFlights}\n                    notify={this.notify}\n                  />\n                </CardBody>\n              </Card>\n            </Col>\n\n          </Row>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Dashboard\n","import Dashboard from \"views/Dashboard.js\"\n\n\nconst routes = [\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    rtlName: \"لوحة القيادة\",\n    icon: \"tim-icons icon-chart-pie-36\",\n    component: Dashboard,\n    layout: \"/admin\"\n  }\n]\n\nexport default routes\n","/*!\n\n=========================================================\n* Black Dashboard React v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/black-dashboard-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/black-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\nimport routes from \"routes.js\";\n\nvar ps;\n\nclass Admin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      backgroundColor: \"blue\",\n      sidebarOpened:\n        document.documentElement.className.indexOf(\"nav-open\") !== -1\n    };\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      document.documentElement.className += \" perfect-scrollbar-on\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-off\");\n      ps = new PerfectScrollbar(this.refs.mainPanel, { suppressScrollX: true });\n      let tables = document.querySelectorAll(\".table-responsive\");\n      for (let i = 0; i < tables.length; i++) {\n        ps = new PerfectScrollbar(tables[i]);\n      }\n    }\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n      document.documentElement.className += \" perfect-scrollbar-off\";\n      document.documentElement.classList.remove(\"perfect-scrollbar-on\");\n    }\n  }\n  componentDidUpdate(e) {\n    if (e.history.action === \"PUSH\") {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        let tables = document.querySelectorAll(\".table-responsive\");\n        for (let i = 0; i < tables.length; i++) {\n          ps = new PerfectScrollbar(tables[i]);\n        }\n      }\n      document.documentElement.scrollTop = 0;\n      document.scrollingElement.scrollTop = 0;\n      this.refs.mainPanel.scrollTop = 0;\n    }\n  }\n  getRoutes = routes => {\n    return routes.map((prop, key) => {\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            component={prop.component}\n            key={key}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  handleBgClick = color => {\n    this.setState({ backgroundColor: color });\n  };\n  render() {\n    return (\n      <>\n        <div className=\"wrapper\">\n          <div\n            className=\"main-panel\"\n            ref=\"mainPanel\"\n            data={this.state.backgroundColor}\n          >\n            <Switch>\n              {this.getRoutes(routes)}\n              <Redirect from=\"*\" to=\"/admin/dashboard\"/>\n            </Switch>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Admin;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport AdminLayout from \"layouts/Admin/Admin.js\";\n\nimport \"assets/scss/black-dashboard-react.scss\";\nimport \"assets/demo/demo.css\";\nimport \"assets/css/nucleo-icons.css\";\n\nconst hist = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={hist}>\n    <Switch>\n      <Route path=\"/admin\" render={props => <AdminLayout {...props} />} />\n      <Redirect from=\"/\" to=\"/admin/dashboard\" />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}